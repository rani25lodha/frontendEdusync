name: Frontend Azure Static Web App CI/CD

trigger:
- main

variables:
- group: variablesedusync  # Link to the variable group
- name: nodeVersion
  value: '20.x'
- name: appLocation
  value: '.' # Root of your app
- name: outputLocation
  value: 'build' # React build output directory
- name: apiLocation
  value: '' # Leave empty as this is frontend only

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '$(nodeVersion)'
  displayName: 'Install Node.js'

# Add diagnostic step to verify directory structure
- script: |
    echo "Current directory structure before build:"
    pwd
    ls -la
    echo "Verifying package.json exists..."
    if [ -f "package.json" ]; then
      echo "package.json found"
      cat package.json
    else
      echo "package.json NOT found!"
      exit 1
    fi
  displayName: 'List Working Directory'

- script: |
    echo "Current directory structure before build:"
    pwd
    ls -la
    npm ci
    npm run build
    echo "Build output structure:"
    ls -la build/
  displayName: 'npm install and build'

- script: |
    echo "Verifying build output structure:"
    ls -la build/
    echo "Checking for index.html:"
    if [ -f "build/index.html" ]; then
      echo "index.html found in build directory"
      cp -r build/* .  # Copy build contents to root for deployment
    else
      echo "index.html NOT found in build directory!"
      exit 1
    fi
    echo "Final deployment directory structure:"
    ls -la
  displayName: 'Verify Build Output and Prepare Deployment'

# Verify deployment variables (without exposing sensitive data)
- script: |
    echo "Checking deployment configuration..."
    echo "Current directory: $(pwd)"
    echo "Package.json exists: $([[ -f "package.json" ]] && echo 'Yes' || echo 'No')"
    echo "index.html exists in root: $([[ -f "index.html" ]] && echo 'Yes' || echo 'No')"
    echo "Token is configured: $([[ ! -z "$(deployment)" ]] && echo 'Yes' || echo 'No')"
  displayName: 'Verify Deployment Configuration'

- task: AzureStaticWebApp@0
  inputs:
    azure_static_web_apps_api_token: $(deployment)
    app_location: '.'
    output_location: '.'  # Since we copied build files to root
    api_location: ''
    skip_app_build: true
    verbose: true
  displayName: 'Deploy to Azure Static Web App'
  condition: and(succeeded(), ne(variables['deployment'], ''))